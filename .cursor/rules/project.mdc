---
description: For tasks requiring a high-level project overview, understanding core goals/principles, or involving cross-cutting concerns (e.g., architecture, full-stack features)
globs: 
alwaysApply: false
---
# Project rules

# Project: CS2 Case Opening Simulator (`cs2-case-unboxer`)

## Overview

This project is a web application simulating the case opening feature found in Counter-Strike 2. It aims to provide a fun experience for users by replicating the process and using probabilities intended to mirror the actual in-game odds.

The live version can be found at: https://case.oki.gg

## Core Goals & Principles

- **Accurate Simulation:** Strive to use probabilities close to the real game for an authentic feel.
- **User Experience:** Provide a fun, engaging, and smooth user interface.
- **Clean Design:** Maintain a clean, maintainable, testable, and robust codebase.
- **Single Responsibility Principle (SRP):** Structure code logically with clear separation of concerns.
- **Minimize Nesting:** Keep code flat and readable by avoiding deep conditional nesting.

## Technology Stack

- **Backend (`Cs2CaseOpener/`):** ASP.NET Core 8, C#
- **Database:** PostgreSQL
- **Frontend (`frontend/`):** Nuxt 3, Vue 3, TypeScript, Tailwind CSS

## Important Notes

- The project utilizes a custom image optimizer (https://github.com/Joel-Adving/image-optimizer).
- Backend development follows ASP.NET 8 best practices (SOLID, KISS, SRP, CQRS where applicable).
- Frontend development uses Nuxt 3, Typescript and TailwindCSS, @pinia/colada useQuery for data fetching, and pinia for global state 