---
description: If the task involves backend code (e.g., C#, ASP.NET Core in the `Cs2CaseOpener/` directory)
globs: 
alwaysApply: false
---

# Backend Rules (ASP.NET Core - Cs2CaseOpener)

## Folder Structure

- `Cs2CaseOpener/Contracts/`: Data Transfer Objects (DTOs) and interfaces for API contracts.
- `Cs2CaseOpener/Controllers/`: API controllers handling HTTP requests.
- `Cs2CaseOpener/Data/`: Entity Framework Core DbContext and related configuration.
- `Cs2CaseOpener/Exceptions/`: Custom exception types.
- `Cs2CaseOpener/Extensions/`: Extension methods for various classes.
- `Cs2CaseOpener/Hubs/`: SignalR hubs for real-time communication.
- `Cs2CaseOpener/Middleware/`: Custom ASP.NET Core middleware.
- `Cs2CaseOpener/Migrations/`: EF Core database migrations.
- `Cs2CaseOpener/Models/`: Domain models or entities.
- `Cs2CaseOpener/Properties/`: Project configuration files (e.g., `launchSettings.json`).
- `Cs2CaseOpener/Services/`: Business logic and application services.

## Coding Guidelines

- Follow ASP.NET 8 best practices guided by SOLID, KISS, SRP, and CQRS principles.
- Prefer records over classes for immutable data structures.
- Utilize LINQ and generics for concise and reusable code.
- For data modifications, favor EF Core's `ExecuteUpdate`/`ExecuteDelete` over fetching entities first when appropriate, to enhance performance.
- Maintain one class, record, or interface per file.